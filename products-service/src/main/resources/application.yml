server:  
  port: ${PORT:2222}
  
spring:  
  application:
    name: products-service
  logging:
    pattern:
      console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    level:
      org.springframework: WARN
      org.hibernate: WARN
#  redis:
#    host: localhost
#    port: 6379
#    cluster:
#      max-redirects: 1


  data:
      #change it localhost in case you are running locally and not in docker environment
      mongodb.host: localhost
      #mongodb.host: mongo
      mongodb.port: 27017
      mongodb.database: commerce
      
  sleuth:
    sampler:
      percentage: 1.0
    web:
      skipPattern: (^cleanup.*)

#  mongo:
#    min-connections: 2
#    max-connections: 5
#    connect-timeout-ms: 5000
#    socket-timeout-ms: 5000
      
security:
  user:
    name: john
    password: 123
  oauth2:
    resource:
      loadBalanced: true
      user-info-uri: http://localhost:8082/gateway-oauth-resource/foos/100
     

eureka:  
  client:
    enabled: true
    serviceUrl:
      defaultZone: ${DISCOVERY_URL:http://localhost:8761}/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
      
ribbon:
  eureka:
    enabled: true
    



